#!/bin/bash

# Copyright (C) 2010 Oregon State University
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

set -e

. common.sh

debug set -x

# If the target device is not a real block device we'll first losetup it.
# This is needed for file disks.
if [ ! -b $blockdev ]; then
    ORIGINAL_BLOCKDEV=$blockdev
    blockdev=$($LOSETUP -sf $blockdev)
    CLEANUP+=("$LOSETUP -d $blockdev")
fi

if [ ! "${NOMOUNT}" = "yes" ] && [ ! "${BLOCKEXPORT}" = "yes" ] ; then
    filesystem_dev=$(map_disk0 $blockdev)
    CLEANUP+=("unmap_disk0 $blockdev")
    root_dev=$(map_partition $filesystem_dev root)
    boot_dev=$(map_partition $filesystem_dev boot)
fi

TARGET=`mktemp -d --tmpdir=${EXPORT_DIR}` || exit 1
CLEANUP+=("rmdir $TARGET")

if [ "${NOMOUNT}" = "yes" ] || [ "${BLOCKEXPORT}" = "yes" ] ; then
    # convert block device to qcow2 image to support OS's like Windows. Use
    # qcow2 to conserve on space.
    $QEMU_IMG convert $blockdev -O qcow2 ${TARGET}/disk.img
    CLEANUP+=("rm ${TARGET}/disk.img")
else
    vol_type_root="$($VOL_TYPE $root_dev)"
    if [ -n "${boot_dev}" ] ; then
        vol_type_boot="$($VOL_TYPE $boot_dev)"
    fi

    for fs in boot root ; do
        # use indirect reference to make the variables dynamic
        dev="$(eval "echo \${$(echo ${fs}_dev)"})"
        vol_type="$(eval echo \$vol_type_${fs})"
        if [ -z "$vol_type" -a -n "${dev}" ] ; then
            log_error "Unable to find ${fs} filesystem type at ${dev}"
            exit 1
        fi
        if [ -n "${dev}" ] ; then
            if [ "$vol_type" = "ext3" -o "$vol_type" = "ext2" \
                    -o "$vol_type" = "ext4" ] ; then
                $DUMP -0 -q -z9 -f ${TARGET}/${fs}.dump $dev
                CLEANUP+=("rm ${TARGET}/${fs}.dump")
            else
                log_error "${fs} is not a supported filesystem. Please use ext{2,3,4}"
                exit 1
            fi
        fi
    done
fi

( cd $TARGET ; tar -cf - . )

# execute cleanups
cleanup
trap - EXIT

exit 0
